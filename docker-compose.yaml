version: "3"

services:
  db:
    image: postgres:14
    ports:
      - "5432:5432"
    volumes:
      - ./db/pgdata:/var/lib/postgresql/data
      - ./db/initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_MULTIPLE_DATABASES: provider,resource-one,resource-two
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  provider:
    build:
      context: ./provider
    tty: true
    command: python manage.py runserver 0:8100
    volumes:
      - ./provider:/code
    ports:
      - "8100:8100"
    depends_on:
      - db
    environment:
      VIRTUAL_HOST: provider.local
      CERT_NAME: provider
      DATABASE_URL: postgres://provider:provider@db:5432/provider
      DEBUG: 1
      SECRET_KEY: provider-secret-key
      ALLOWED_HOSTS: provider.local

  resource-one:
    build:
      context: ./resource-one
    tty: true
    command: python manage.py runserver 0:8200
    volumes:
      - ./resource-one:/code
    ports:
      - "8200:8200"
    depends_on:
      - db
    environment:
      VIRTUAL_HOST: resource-one.local
      CERT_NAME: resource-one
      DATABASE_URL: postgres://resource-one:resource-one@db:5432/resource-one
      DEBUG: 1
      SECRET_KEY: resource-one-secret-key
      ALLOWED_HOSTS: resource-one.local

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
    privileged: true
